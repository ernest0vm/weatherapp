{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ErnestoVM\\\\Documents\\\\vsCode\\\\weatherapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ErnestoVM\\\\Documents\\\\vsCode\\\\weatherapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ErnestoVM\\\\Documents\\\\vsCode\\\\weatherapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ErnestoVM\\\\Documents\\\\vsCode\\\\weatherapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ErnestoVM\\\\Documents\\\\vsCode\\\\weatherapp\\\\src\\\\components\\\\WeatherLocation\\\\index.js\";\nimport React, { Component } from 'react';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport { SUN } from '../../constants/weathers';\nimport './styles.css';\nvar location = \"Mexico City,MX\";\nvar api_key = \"64717d119744c560b3b8e62c09078f43\";\nvar api_weather = \"http://api.openweathermap.org/data/2.5/weather?q=\".concat(location, \"&APPID=\").concat(api_key);\nvar data1 = {\n  temperature: 20,\n  weatherState: SUN,\n  humidity: 10,\n  wind: '10m/s'\n};\n\nvar WeatherLocation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherLocation, _Component);\n\n  function WeatherLocation() {\n    var _this;\n\n    _classCallCheck(this, WeatherLocation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WeatherLocation).call(this));\n\n    _this.getWeatherState = function (weather) {\n      return SUN;\n    };\n\n    _this.getData = function (weather_data) {\n      var _weather_data$main = weather_data.main,\n          humidity = _weather_data$main.humidity,\n          temp = _weather_data$main.temp;\n      var speed = weather_data.wind.speed;\n\n      var weatherState = _this.getWeatherState(_this.weather);\n\n      var data = {\n        humidity: humidity,\n        temperature: temp,\n        weatherState: weatherState\n      };\n    };\n\n    _this.handleUpdateClick = function () {\n      fetch(api_weather).then(function (data) {\n        console.log(data);\n        return data.json();\n      }).then(function (weather_data) {\n        var data = _this.getData(weather_data);\n\n        _this.setState({\n          data: data\n        });\n\n        console.log(weather_data);\n        debugger;\n      });\n      /*this.setState({            \r\n          data: data2\r\n      });*/\n\n      console.log(\"actualizado\");\n    };\n\n    _this.render = function () {\n      var _this$state = _this.state,\n          data = _this$state.data,\n          city = _this$state.city;\n      return React.createElement(\"div\", {\n        className: \"weatherLocationCont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Location, {\n        city: city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(WeatherData, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: _this.handleUpdateClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Actualizar\"));\n    };\n\n    _this.state = {\n      data: data1,\n      city: \"Mexico\"\n    };\n    return _this;\n  }\n\n  return WeatherLocation;\n}(Component);\n\nexport default WeatherLocation;","map":{"version":3,"sources":["C:\\Users\\ErnestoVM\\Documents\\vsCode\\weatherapp\\src\\components\\WeatherLocation\\index.js"],"names":["React","Component","Location","WeatherData","SUN","location","api_key","api_weather","data1","temperature","weatherState","humidity","wind","WeatherLocation","getWeatherState","weather","getData","weather_data","main","temp","speed","data","handleUpdateClick","fetch","then","console","log","json","setState","render","state","city"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,GAAR,QAAkB,0BAAlB;AACA,OAAO,cAAP;AAEA,IAAMC,QAAQ,GAAG,gBAAjB;AACA,IAAMC,OAAO,GAAG,kCAAhB;AACA,IAAMC,WAAW,8DAAuDF,QAAvD,oBAAyEC,OAAzE,CAAjB;AAEA,IAAME,KAAK,GAAG;AACVC,EAAAA,WAAW,EAAE,EADH;AAEVC,EAAAA,YAAY,EAAEN,GAFJ;AAGVO,EAAAA,QAAQ,EAAE,EAHA;AAIVC,EAAAA,IAAI,EAAE;AAJI,CAAd;;IAOMC,e;;;;;AAEF,6BAAa;AAAA;;AAAA;;AACT;;AADS,UAQbC,eARa,GAQK,UAACC,OAAD,EAAY;AAC1B,aAAOX,GAAP;AACH,KAVY;;AAAA,UAYbY,OAZa,GAYH,UAACC,YAAD,EAAkB;AAAA,+BACAA,YAAY,CAACC,IADb;AAAA,UACjBP,QADiB,sBACjBA,QADiB;AAAA,UACRQ,IADQ,sBACRA,IADQ;AAAA,UAEjBC,KAFiB,GAERH,YAAY,CAACL,IAFL,CAEjBQ,KAFiB;;AAGxB,UAAMV,YAAY,GAAG,MAAKI,eAAL,CAAqB,MAAKC,OAA1B,CAArB;;AAEA,UAAMM,IAAI,GAAG;AACTV,QAAAA,QAAQ,EAARA,QADS;AAETF,QAAAA,WAAW,EAAEU,IAFJ;AAGTT,QAAAA,YAAY,EAAZA;AAHS,OAAb;AAKH,KAtBY;;AAAA,UAwBbY,iBAxBa,GAwBO,YAAM;AACtBC,MAAAA,KAAK,CAAChB,WAAD,CAAL,CAAmBiB,IAAnB,CAAwB,UAAAH,IAAI,EAAI;AAE5BI,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,eAAOA,IAAI,CAACM,IAAL,EAAP;AACH,OAJD,EAIGH,IAJH,CAIQ,UAAAP,YAAY,EAAI;AACpB,YAAMI,IAAI,GAAG,MAAKL,OAAL,CAAaC,YAAb,CAAb;;AACZ,cAAKW,QAAL,CAAc;AAACP,UAAAA,IAAI,EAAJA;AAAD,SAAd;;AAEYI,QAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACA;AACH,OAVD;AAWA;;;;AAGAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,KAxCY;;AAAA,UA0CbG,MA1Ca,GA0CJ,YAAM;AAAA,wBACU,MAAKC,KADf;AAAA,UACJT,IADI,eACJA,IADI;AAAA,UACEU,IADF,eACEA,IADF;AAEX,aACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEV,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAQ,QAAA,OAAO,EAAE,MAAKC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CADJ;AAOH,KAnDY;;AAET,UAAKQ,KAAL,GAAa;AACTT,MAAAA,IAAI,EAAEb,KADG;AAETuB,MAAAA,IAAI,EAAE;AAFG,KAAb;AAFS;AAMZ;;;EARyB9B,S;;AAwD9B,eAAeY,eAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Location from './Location';\r\nimport WeatherData from './WeatherData';\r\nimport {SUN} from '../../constants/weathers';\r\nimport './styles.css';\r\n\r\nconst location = \"Mexico City,MX\"\r\nconst api_key = \"64717d119744c560b3b8e62c09078f43\";\r\nconst api_weather = `http://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=${api_key}`;\r\n\r\nconst data1 = {\r\n    temperature: 20,\r\n    weatherState: SUN,\r\n    humidity: 10,\r\n    wind: '10m/s'\r\n};\r\n\r\nclass WeatherLocation extends Component { \r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data: data1,\r\n            city: \"Mexico\"\r\n        }\r\n    }\r\n\r\n    getWeatherState = (weather) =>{\r\n        return SUN;\r\n    }\r\n\r\n    getData = (weather_data) => {\r\n        const {humidity,temp} = weather_data.main;\r\n        const {speed} = weather_data.wind;\r\n        const weatherState = this.getWeatherState(this.weather);\r\n\r\n        const data = {\r\n            humidity,\r\n            temperature: temp,\r\n            weatherState\r\n        }\r\n    }\r\n\r\n    handleUpdateClick = () => {\r\n        fetch(api_weather).then(data => {\r\n            \r\n            console.log(data)\r\n            return data.json();\r\n        }).then(weather_data => {\r\n            const data = this.getData(weather_data);\r\nthis.setState({data})\r\n\r\n            console.log(weather_data)\r\n            debugger;\r\n        });\r\n        /*this.setState({            \r\n            data: data2\r\n        });*/\r\n        console.log(\"actualizado\");\r\n    }\r\n\r\n    render = () => {\r\n        const {data, city} = this.state;\r\n        return(\r\n            <div className='weatherLocationCont'>\r\n                <Location city={city}/>\r\n                <WeatherData data={data} />\r\n                <button onClick={this.handleUpdateClick}>Actualizar</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeatherLocation;"]},"metadata":{},"sourceType":"module"}